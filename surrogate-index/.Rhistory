rm(list = ls())
# one side noncompliace makes always takers a complier
set.seed(12345)
library(tidyverse)
library(HydeNet)
net<-HydeNetwork(~experiment+
x1+
x2+
x3+
x4+
x5+
prob.response|x1*x2+
response|prob.response*experiment+
S|response*x2*x3*x4+
y|S*x4*x5)
plot(net)
library(tidyverse)
library(HydeNet)
net<-HydeNetwork(~experiment+
x1+
x2+
x3+
x4+
x5+
prob.response|x1*x2+
response|prob.response*experiment+
S|response*x2*x3*x4+
y|S*x4*x5)
plot(net)
net<-setNode(net,experiment,nodeType="dbern",p=0.2)
net<-setNode(net,x1,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x2,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x3,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x4,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x5,nodeType = "dnorm", mu=0,tau=0.2)
net<-setNode(net,prob.response,"determ",define=fromFormula(),
nodeFormula = prob.response~ilogit(-1+x1+0.5*x2))
net<-setNode(net,response,nodeType ="dbern", prob="experiment*prob.response")
net<-setNode(net,S,nodeType = "dnorm", mean="response*(100-0.6*x2+x3+0.2*x4)",
sd=10)
net<-setNode(net,y,nodeType = "dnorm", mean="500+0.1*S-0.15*x4+50*x5",
sd=10)
writeNetworkModel(net,pretty=TRUE)
rm(list = ls())
# one side noncompliace makes always takers a complier
set.seed(12345)
library(tidyverse)
library(HydeNet)
net<-HydeNetwork(~experiment+
x1+
x2+
x3+
x4+
x5+
prob.response|x1*x2+
response|prob.response*experiment+
S|response*x2*x3*x4+
y|S*x4*x5)
plot(net)
net<-setNode(net,experiment,nodeType="dbern",p=0.2)
net<-setNode(net,x1,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x2,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x3,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x4,nodeType = "dnorm", mu=0,tau=1)
net<-setNode(net,x5,nodeType = "dnorm", mu=0,tau=0.2)
net<-setNode(net,prob.response,"determ",define=fromFormula(),
nodeFormula = prob.response~ilogit(-1+x1+0.5*x2))
net<-setNode(net,response,nodeType ="dbern", prob="experiment*prob.response")
net<-setNode(net,S,nodeType = "dnorm", mean="response*(100-0.6*x2+x3+0.2*x4)",
sd="1000*(1-response)+1")
net<-setNode(net,y,nodeType = "dnorm", mean="500+0.1*S-0.15*x4+50*x5",
sd=10)
writeNetworkModel(net,pretty=TRUE)
trackedVars<-c("experiment","prob.response","response",
"x1","x2","x3","x4","x5","S","y")
evidence=NULL
compiledNet<-compileJagsModel(net,data=evidence,n.chain=3,n.adapt=5000)
post<-HydeSim(compiledNet,variable.names =trackedVars,n.iter=10000)
dplyr::sample_n(post,10)
test<-post%>%
filter(experiment==1)
summary(test)
